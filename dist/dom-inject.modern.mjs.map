{"version":3,"file":"dom-inject.modern.mjs","sources":["../src/index.js"],"sourcesContent":["/**\n * Written by Elliott Mangham at Code Resolution. Maintained by Code Resolution.\n * made@coderesolution.com\n */\nimport DOMPurify from 'dompurify'\n\nexport default class ContentFetch {\n\tconstructor(options = {}) {\n\t\tthis.options = {\n\t\t\tloadingClass: options.loadingClass || 'is-loading',\n\t\t\tloadedClass: options.loadedClass || 'has-loaded',\n\t\t\terrorClass: options.errorClass || 'has-error',\n\t\t\tdebugMode: options.debugMode || false,\n\t\t\t...options,\n\t\t}\n\t\tthis.cache = new Map()\n\t\tthis.controller = new AbortController()\n\t}\n\n\tlog(message) {\n\t\tif (this.options.debugMode) {\n\t\t\tconsole.log(message)\n\t\t}\n\t}\n\n\tfetchContent(url, sourceScope = null, includeParent = false) {\n\t\treturn fetch(url, { signal: this.controller.signal })\n\t\t\t.then((response) => {\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error('Network response was not ok.')\n\t\t\t\t}\n\t\t\t\tthis.log('Fetch response received')\n\t\t\t\treturn response.text()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconst parser = new DOMParser()\n\t\t\t\tconst doc = parser.parseFromString(data, 'text/html')\n\t\t\t\tlet element = sourceScope ? doc.querySelector(sourceScope) : doc.body\n\t\t\t\tif (!element) {\n\t\t\t\t\tthrow new Error(`Element not found for selector: ${sourceScope}`)\n\t\t\t\t}\n\t\t\t\tthis.log('Parsed HTML and found element')\n\n\t\t\t\t// Sanitize the HTML content\n\t\t\t\telement =\n\t\t\t\t\tincludeParent && sourceScope\n\t\t\t\t\t\t? DOMPurify.sanitize(element.outerHTML)\n\t\t\t\t\t\t: DOMPurify.sanitize(element.innerHTML)\n\t\t\t\treturn element\n\t\t\t})\n\t}\n\n\tfrom({ selector, url = window.location.href, includeParent = false, onStart, onEnd, onError }) {\n\t\tif (!selector) {\n\t\t\tconst error = new Error('Selector must be defined.')\n\t\t\tif (onError) {\n\t\t\t\tonError(error)\n\t\t\t} else {\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t\treturn Promise.reject(error)\n\t\t}\n\n\t\tif (onStart) onStart()\n\n\t\tconst cacheKey = `${url}-${selector}-${includeParent}`\n\t\tthis.log(`Cache key is: ${cacheKey}`)\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this.cache.has(cacheKey)) {\n\t\t\t\tconst cachedData = this.cache.get(cacheKey)\n\t\t\t\tthis.log('Serving from cache')\n\t\t\t\tif (onEnd) onEnd(cachedData)\n\t\t\t\tresolve(cachedData)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.log(`Fetching data from URL: ${url}`)\n\t\t\tif (url === window.location.href) {\n\t\t\t\tconst sourceElement = document.querySelector(selector)\n\t\t\t\tif (!sourceElement) {\n\t\t\t\t\tconst error = new Error(`Element not found for selector: ${selector}`)\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(error)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(error)\n\t\t\t\t\t}\n\t\t\t\t\treturn reject(error)\n\t\t\t\t}\n\t\t\t\tconst html = includeParent ? sourceElement.outerHTML : sourceElement.innerHTML\n\t\t\t\tconst sanitizedHtml = DOMPurify.sanitize(html)\n\t\t\t\tthis.cache.set(cacheKey, sanitizedHtml)\n\t\t\t\tif (onEnd) onEnd(sanitizedHtml)\n\t\t\t\tresolve(sanitizedHtml)\n\t\t\t} else {\n\t\t\t\tthis.fetchContent(url, selector, includeParent)\n\t\t\t\t\t.then((html) => {\n\t\t\t\t\t\tthis.cache.set(cacheKey, html)\n\t\t\t\t\t\tif (onEnd) onEnd(html)\n\t\t\t\t\t\tresolve(html)\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tif (onError) {\n\t\t\t\t\t\t\tonError(error)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error('Error fetching content:', error)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treject(error)\n\t\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tto({ destination, data, mode = 'replace', delay = 0, onStart, onEnd, onError }) {\n\t\tif (!destination || !data) {\n\t\t\tconst error = new Error('Destination and data must be defined.')\n\t\t\tif (onError) {\n\t\t\t\tonError(error)\n\t\t\t} else {\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t\treturn Promise.reject(error)\n\t\t}\n\n\t\tconst targetElement = typeof destination === 'string' ? document.querySelector(destination) : destination\n\t\tif (!targetElement) {\n\t\t\tconst error = new Error(`Target element not found for selector: ${destination}`)\n\t\t\tif (onError) {\n\t\t\t\tonError(error)\n\t\t\t} else {\n\t\t\t\tconsole.error(error)\n\t\t\t}\n\t\t\treturn Promise.reject(error)\n\t\t}\n\n\t\tif (onStart) onStart(targetElement)\n\n\t\t// Add loading class\n\t\ttargetElement.classList.add(this.options.loadingClass)\n\n\t\tconst insertContent = () => {\n\t\t\ttry {\n\t\t\t\tthis.log(`Inserting content via '${mode}' mode`)\n\t\t\t\tconst fragment = document.createDocumentFragment()\n\t\t\t\tconst tempDiv = document.createElement('div')\n\t\t\t\ttempDiv.innerHTML = data\n\n\t\t\t\tif (mode === 'prepend') {\n\t\t\t\t\tfor (const node of [...tempDiv.childNodes].reverse()) {\n\t\t\t\t\t\ttargetElement.insertBefore(node, targetElement.firstChild)\n\t\t\t\t\t}\n\t\t\t\t} else if (mode === 'append') {\n\t\t\t\t\ttargetElement.appendChild(tempDiv)\n\t\t\t\t} else {\n\t\t\t\t\ttargetElement.innerHTML = '' // Clear the existing content\n\t\t\t\t\ttargetElement.appendChild(tempDiv)\n\t\t\t\t}\n\n\t\t\t\t// Remove loading class and add loaded class\n\t\t\t\ttargetElement.classList.remove(this.options.loadingClass)\n\t\t\t\ttargetElement.classList.add(this.options.loadedClass)\n\n\t\t\t\tif (onEnd) onEnd(targetElement)\n\t\t\t\treturn Promise.resolve(targetElement)\n\t\t\t} catch (error) {\n\t\t\t\t// Remove loading class and add error class\n\t\t\t\ttargetElement.classList.remove(this.options.loadingClass)\n\t\t\t\ttargetElement.classList.add(this.options.errorClass)\n\n\t\t\t\tif (onError) {\n\t\t\t\t\tonError(error)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Error inserting content:', error)\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(error)\n\t\t\t}\n\t\t}\n\n\t\tif (delay > 0) {\n\t\t\tthis.log(`Delaying insertion by ${delay} seconds`)\n\t\t\tsetTimeout(insertContent, delay * 1000)\n\t\t} else {\n\t\t\treturn insertContent()\n\t\t}\n\t}\n\n\tfromTo(fromParams, toParams) {\n\t\tthis.from(fromParams)\n\t\t\t.then((html) => {\n\t\t\t\treturn this.to({ ...toParams, data: html })\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// errors are handled in from() and to()\n\t\t\t})\n\t}\n\n\tabortFetch() {\n\t\tthis.controller.abort()\n\t\tthis.controller = new AbortController()\n\t\tthis.cache.clear()\n\t}\n}\n\nwindow.ContentFetch = ContentFetch"],"names":["ContentFetch","constructor","options","this","_extends","loadingClass","loadedClass","errorClass","debugMode","cache","Map","controller","AbortController","log","message","console","fetchContent","url","sourceScope","includeParent","fetch","signal","then","response","ok","Error","text","data","doc","DOMParser","parseFromString","element","querySelector","body","DOMPurify","sanitize","outerHTML","innerHTML","from","selector","window","location","href","onStart","onEnd","onError","error","Promise","reject","cacheKey","resolve","has","cachedData","get","sourceElement","document","sanitizedHtml","set","html","catch","to","destination","mode","delay","targetElement","classList","add","insertContent","createDocumentFragment","tempDiv","createElement","node","childNodes","reverse","insertBefore","firstChild","appendChild","remove","setTimeout","fromTo","fromParams","toParams","abortFetch","abort","clear"],"mappings":"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"}